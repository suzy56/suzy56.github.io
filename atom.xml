<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>suzy56</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://suzy56.github.io/"/>
  <updated>2019-08-05T03:57:03.495Z</updated>
  <id>https://suzy56.github.io/</id>
  
  <author>
    <name>suzy56</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从零开始React-01</title>
    <link href="https://suzy56.github.io/2019/08/05/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8BReact-01/"/>
    <id>https://suzy56.github.io/2019/08/05/从零开始React-01/</id>
    <published>2019-08-05T03:41:56.000Z</published>
    <updated>2019-08-05T03:57:03.495Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开发人员分离"><a href="#开发人员分离" class="headerlink" title="开发人员分离"></a>开发人员分离</h2><h4 id="1-对于后端java开发"><a href="#1-对于后端java开发" class="headerlink" title="1.对于后端java开发"></a>1.对于后端java开发</h4><p>​    把精力放在Java基础，设计模式，jvm原理，spring+springmvc原理及源码，linux，mysql事务隔离与锁机制，mongodb，http/tcp，多线程，分布式架构，弹性计算架构，微服务架构，Java性能优化，以及相关的项目管理等等。</p><p>后端追求的是：三高（高并发，高可用，高性能），安全，存储，业务等等。</p><h4 id="2-对于前端"><a href="#2-对于前端" class="headerlink" title="2.对于前端"></a>2.对于前端</h4><p>​    把精力放在html5，css3，jquery，angularjs，bootstrap，reactjs，vuejs，webpack，less/sass，gulp，nodejs，Google V8引擎，javascript多线程，模块化，面向切面编程，设计模式，浏览器兼容性，性能优化等等。</p><p>前端追求的是：页面表现，速度流畅，兼容性，用户体验等等。</p><h3 id="未分离前"><a href="#未分离前" class="headerlink" title="未分离前"></a>未分离前</h3><p>​    传统JavaWeb项目都是使用了若干后台框架，springmvc/struts + spring + spring jdbc/hibernate/mybatis 等等。</p><p>大多数项目在Java后端都是分了三层，控制层，业务层，持久层。控制层负责接收参数，调用相关业务层，封装数据，以及路由&amp;渲染到jsp页面。然后jsp页面上使用各种标签或者手写java表达式将后台的数据展现出来，玩的是MVC那套思路。</p><p>我们先看这种情况：需求定完了，代码写完了，测试测完了，然后呢？要发布了吧？你需要用maven或者eclipse等工具把你的代码打成一个war包，然后把这个war包发布到你的生产环境下的web容器里，对吧？</p><p>发布完了之后，你要启动你的Web容器，开始提供服务，这时候你通过配置域名，dns等等相关，你的网站就可以访问了（假设你是个网站）。那我们来看，你的前后端代码是不是全都在那个war包里？包括你的js，css，图片，各种第三方的库，对吧？</p><p>好，下面在浏览器中输入你的网站域名（<a href="http://www.xxx.com），之后发生了什么？" target="_blank" rel="noopener">www.xxx.com），之后发生了什么？</a></p><p>浏览器在通过域名通过dns服务器找到服务器外网ip，将http请求发送到服务器，在tcp3次握手之后（http下面是tcp/ip），通过tcp协议开始传输数据，服务器得到请求后，开始提供服务，接收参数，之后返回应答给浏览器，浏览器再通过content-type来解析返回的内容，呈现给用户。</p><p>那么我们来看，我们先假设你的首页中有100张图片，此时，用户的看似一次http请求，其实并不是一次，用户在第一次访问的时候，浏览器中不会有缓存，100张图片，浏览器要连着请求100次http请求，服务器接收这些请求，都需要耗费内存去创建socket来玩tcp传输。</p><p>重点来了，这样的话，服务器的压力会非常大，因为页面中的所有请求都是只请求到这台服务器上，如果1个人还好，如果10000个人并发访问呢，那服务器能扛住多少个tcp连接？带宽有多大？服务器的内存有多大？硬盘是高性能的吗？能抗住多少IO？web服务器分的内存有多大？会不会宕机？</p><p>这就是为什么，越是大中型的web应用，他们越是要解耦。理论上可以把数据库+应用服务+消息队列+缓存+用户上传的文件+日志+等等都扔在一台服务器上，这也不用玩什么服务治理，也不用做什么性能监控，什么报警机制等等，就乱成一锅粥好了。但是这样就好像是把鸡蛋都放在一个篮子里，隐患非常大。如果因为一个子应用的内存不稳定导致整个服务器内存溢出而hung住，那整个网站就挂掉了。</p><p>如果出意外挂掉，而恰好这时你们的业务又处于井喷式发展高峰期，业务成功被技术卡住，很可能会流失大量用户，后果不堪设想。</p><p>此外，应用全部都耦合在一起，相当于一个巨石，当服务端负载能力不足时，一般会使用负载均衡的方式，将服务器做成集群，这样其实你是在水平扩展一块块巨石，性能加速度会越来越低，要知道，本身负载就低的功能or模块是没有必要水平扩展的，在本文中的例子就是性能瓶颈不在前端，那干嘛要水平扩展前端呢？还有发版部署上线的时候，明明只改了后端的代码，为什么要前端也跟着发布呢？</p><p>正常的互联网架构，是都要拆开的，web服务器集群，应用服务器集群+文件服务器集群+数据库服务器集群+消息队列集群+缓存集群等等</p><h3 id="前后端分离的优势"><a href="#前后端分离的优势" class="headerlink" title="前后端分离的优势"></a>前后端分离的优势</h3><ol><li><p>可以实现真正的前后端解耦，前端服务器使用nginx。前端/WEB服务器放的是css，js，图片等等一系列静态资源（甚至你还可以css，js，图片等资源放到特定的文件服务器，例如阿里云的oss，并使用cdn加速），前端服务器负责控制页面引用&amp;跳转&amp;路由，前端页面异步调用后端的接口，后端/应用服务器使用tomcat（把tomcat想象成一个数据提供者），加快整体响应速度。（这里需要使用一些前端工程化的框架比如nodejs，react，router，react，redux，webpack）</p></li><li><p>发现bug，可以快速定位是谁的问题，不会出现互相踢皮球的现象。页面逻辑，跳转错误，浏览器兼容性问题，脚本错误，页面样式等问题，全部由前端工程师来负责。接口数据出错，数据没有提交成功，应答超时等问题，全部由后端工程师来解决。双方互不干扰，前端与后端是相亲相爱的一家人。</p></li><li><p>在大并发情况下，我可以同时水平扩展前后端服务器，比如淘宝的一个首页就需要2000+台前端服务器做集群来抗住日均多少亿+的日均pv。（去参加阿里的技术峰会，听他们说他们的web容器都是自己写的，就算他单实例抗10万http并发，2000台是2亿http并发，并且他们还可以根据预知洪峰来无限拓展，很恐怖，就一个首页。。。）</p></li><li><p>减少后端服务器的并发/负载压力。除了接口以外的其他所有http请求全部转移到前端nginx上，接口的请求调用tomcat，参考nginx反向代理tomcat。且除了第一次页面请求外，浏览器会大量调用本地缓存。</p></li><li><p>即使后端服务暂时超时或者宕机了，前端页面也会正常访问，只不过数据刷不出来而已。</p></li><li><p>也许你也需要有微信相关的轻应用，那样你的接口完全可以共用，如果也有app相关的服务，那么只要通过一些代码重构，也可以大量复用接口，提升效率。（多端应用）</p></li><li><p>页面显示的东西再多也不怕，因为是异步加载。</p></li><li><p>nginx支持页面热部署，不用重启服务器，前端升级更无缝。</p></li><li><p>增加代码的维护性&amp;易读性（前后端耦在一起的代码读起来相当费劲）。</p></li><li><p>提升开发效率，因为可以前后端并行开发，而不是像以前的强依赖。</p></li><li><p>在nginx中部署证书，外网使用https访问，并且只开放443和80端口，其他端口一律关闭（防止黑客端口扫描），内网使用http，性能和安全都有保障。</p></li><li><p>前端大量的组件代码得以复用，组件化，提升开发效率，抽出来！</p></li></ol><h3 id="对比传统jsp和现有前端框架"><a href="#对比传统jsp和现有前端框架" class="headerlink" title="对比传统jsp和现有前端框架"></a>对比传统jsp和现有前端框架</h3><p><img src="/2019/08/05/从零开始React-01/2.png" alt="对比"></p><h4 id="传统jsp"><a href="#传统jsp" class="headerlink" title="传统jsp"></a>传统jsp</h4><p>以前的javaWeb项目大多数使用jsp作为页面层展示数据给用户，因为流量不高，因此也没有那么苛刻的性能要求，但现在是大数据时代，对于互联网项目的性能要求是越来越高，因此原始的前后端耦合在一起的架构模式已经逐渐不能满足我们，因此我们需要需找一种解耦的方式，来大幅度提升我们的负载能力。</p><ol><li>动态资源和静态资源全部耦合在一起，服务器压力大，因为服务器会收到各种http请求，例如css的http请求，js的，图片的等等。一旦服务器出现状况，前后台一起玩完，用户体验极差。</li><li>UI出好设计图后，前端工程师只负责将设计图切成html，需要由java工程师来将html套成jsp页面，出错率较高（因为页面中经常会出现大量的js代码），修改问题时需要双方协同开发，效率低下。</li><li>jsp必须要在支持java的web服务器里运行（例如tomcat，jetty，resin等），无法使用nginx等（nginx据说单实例http并发高达5w，这个优势要用上），性能提不上来。</li><li>第一次请求jsp，必须要在web服务器中编译成servlet，第一次运行会较慢。</li><li>每次请求jsp都是访问servlet再用输出流输出的html页面，效率没有直接使用html高（是每次哟，亲~）。</li><li>jsp内有较多标签和表达式，前端工程师在修改页面时会捉襟见肘，遇到很多痛点。</li><li>如果jsp中的内容很多，页面响应会很慢，因为是同步加载。</li><li>需要前端工程师使用java的ide（例如eclipse），以及需要配置各种后端的开发环境，你们有考虑过前端工程师的感受吗。</li></ol><p>基于上述的一些痛点，我们应该把整个项目的开发权重往前移，实现前后端真正的解耦！</p><p><strong>在react，angular，vue这三者中，Angular的适用领域相对窄一些，React可以拓展到服务端，移动端Native 部分，而Vue因为比较轻量，还能用于业务场景非常轻的页面中。</strong></p><p><strong>React、Angular、Vue.js的比较速览</strong></p><p><strong>单向数据流与双向数据绑定</strong></p><p>双向数据绑定是指将UI字段动态地绑定到模型上的一种机制。当UI的各种元素发生变更时，其模型数据将相应地发生变化。另一方面，单向数据流则意味着只有单一的数据来源–模型。应用程序的数据遵循同一方向流动，只有模型才能更改应用程序的状态。这是React和Angular的主要区别之一。</p><p>显然，单向数据流不但易于理解，而且具有确定性；而由于双向数据绑定的复杂性，它不但难以被理解，而且在实现上也有一定的困难。</p><p>因此在此方面，Angular使用的是双向数据绑定，React用的是单数据流的，而Vue则支持两者。此处重点在于：Angular的双向方法提供了高效的编码结构，从而方便了开发人员的发现和使用。而React针对数据的单向管理，提供了更好的概述和理解。</p><p><strong>微应用和微服务的兴起</strong></p><p>目前，微应用和微服务技术正方兴未艾。React和Vue的灵活选择性，对于应用程序来说是非常重要的。在React和Vue环境中，您只需要将各种库添加到源代码之中便可。</p><p>由于Angular使用的是TypeScript，因此它更适合于单页Web应用（single page web application，SPA），而非微服务。相反，React和Vue的灵活性更适合微应用和微服务的开发。</p><p><strong>最后应该如何选择？</strong></p><p>如果您追求灵活性胜过功能性的话，请使用React。</p><p>如果您喜欢在编码中使用TypeScript的话，请使用Angular。</p><p>如果您是个JavaScript爱好者的话，请根据JavaScript来选择使用React。</p><p>如果您是个整洁的代码控，请在应用程序中使用Vue。</p><p>Vue提供了最简单的学习曲线，因此它是初学者的理想选择。</p><p>如果您想在应用程序中关注点分离(Separation of Concerns)，请使用Vue。</p><p>如果您喜欢面向对象的编程，那么Angular绝对是您的最佳选择。</p><p>另外，Vue往往是一些小团队和小项目的理想选择。如果您的应用程序体积较大，而且有着未来的扩展计划，那么请选择React或Angular。</p><p>对于跨平台应用程序的开发而言，React Native是个不错的选择，因为它提供了各种现代化的功能，您可以轻松地找到对应的资源。而对于Angular来说，您需要拥有对 于JavaScript的全面知识，以构建出各种大规模的应用。</p><p><img src="/2019/08/05/从零开始React-01/6.png" alt=""></p><h3 id="初步分离"><a href="#初步分离" class="headerlink" title="初步分离"></a>初步分离</h3><p><img src="/2019/08/05/从零开始React-01/2.png" alt=""></p><p><strong>这个方案比较简单，易于实现，而且能到达前后端解耦的目的。而且很多公司目前都是基于这种架构或者一定的变形来实现的web应用。</strong></p><p>但是对于页面量比较大，需要有良好SEO的应用来说，此方案缺点也较为明显。因为 Nginx只是向浏览器返回页面静态资源，而国内的搜索引擎爬虫只会抓取静态数据， 不会解析页面中的js，这使得应用得不到良好的搜索引擎支持。同时因为Nginx不会进行页面的组装渲染，需要把静态页面返回到浏览器，然后完成渲染工作，这加重了浏览器的渲染负担。</p><p>另外，由于这种架构使得前端工程师的工作范围只局限在了浏览器一侧，导致在进行一些特殊的性能优化时，前端工程师无法独立完成，还需要后端开发人员的配合，这也一定程度上影响了双方的进度。</p><p>分离后</p><p><img src="/2019/08/05/从零开始React-01/4.png" alt=""></p><p>前后端分离之后，我们在原先的架构只上再单独增加了一个Node Server作为中间层，将前端资源部署到Node Server中。Node Server还实现了一层数据代理服务，负责与提供数据的后端服务进行通信。</p><p>并且还在这个基础上增加并使用了前端机<em>（前端机是对所有的请求进行预处理和负载均衡，然后再转发给后端机。）</em>的Nginx服务，浏览器发起的请求经过前端机的Nginx进行分发，URL请求统一分发到Node Server，在Node Server中根据请求类型从后端服务器上通过RPC服务请求页面的模板数据，然后进行页面的组装和渲染；API请求则直接转发到后端服务器，完成响应。</p><h3 id="开发模式"><a href="#开发模式" class="headerlink" title="开发模式"></a>开发模式</h3><p><strong>以前老的方式是：</strong></p><ol><li>产品经历/领导/客户提出需求</li><li>UI做出设计图</li><li>前端工程师做html页面</li><li>后端工程师将html页面套成jsp页面（前后端强依赖，后端必须要等前端的html做好才能套jsp。如果html发生变更，就更痛了，开发效率低）</li><li>集成出现问题</li><li>前端返工</li><li>后端返工</li><li>二次集成</li><li>集成成功</li><li>交付</li></ol><p><strong>新的方式是：</strong></p><ol><li>产品经历/领导/客户提出需求</li><li>UI做出设计图</li><li>前后端约定接口&amp;数据&amp;参数</li><li>前后端并行开发（无强依赖，可前后端并行开发，如果需求变更，只要接口&amp;参数不变，就不用两边都修改代码，开发效率高）</li><li>前后端集成</li><li>前端页面调整</li><li>集成成功</li><li>交付</li></ol><p>参考：<a href="http://juejin.im/post/5b71302351882560ea4afbb8/" target="_blank" rel="noopener">http://juejin.im/post/5b71302351882560ea4afbb8/</a></p><p>​        <a href="http://developer.51cto.com/art/201809/582490.htm" target="_blank" rel="noopener">http://developer.51cto.com/art/201809/582490.htm</a></p><p>​        <a href="https://www.w3cvip.org/topics/93" target="_blank" rel="noopener">https://www.w3cvip.org/topics/93</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;开发人员分离&quot;&gt;&lt;a href=&quot;#开发人员分离&quot; class=&quot;headerlink&quot; title=&quot;开发人员分离&quot;&gt;&lt;/a&gt;开发人员分离&lt;/h2&gt;&lt;h4 id=&quot;1-对于后端java开发&quot;&gt;&lt;a href=&quot;#1-对于后端java开发&quot; class=&quot;head
      
    
    </summary>
    
      <category term="学习记录" scheme="https://suzy56.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="React" scheme="https://suzy56.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建注意事项</title>
    <link href="https://suzy56.github.io/2018/12/19/hexo%E6%90%AD%E5%BB%BA%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>https://suzy56.github.io/2018/12/19/hexo搭建注意事项/</id>
    <published>2018-12-19T00:34:44.000Z</published>
    <updated>2018-12-19T02:46:58.432Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo搭建注意事项"><a href="#hexo搭建注意事项" class="headerlink" title="hexo搭建注意事项"></a>hexo搭建注意事项</h2><p> hexo的基本安装就不赘述，只谈下遇到的问题 </p><p>可参考 <a href="https://blog.csdn.net/sunshine940326/article/details/52552283" target="_blank" rel="noopener">hexo基本安装教程</a></p><h4 id="文章需要插入本地图片"><a href="#文章需要插入本地图片" class="headerlink" title="文章需要插入本地图片"></a>文章需要插入本地图片</h4><h5 id="1-放在主题下images文件夹下"><a href="#1-放在主题下images文件夹下" class="headerlink" title="1.放在主题下images文件夹下"></a>1.放在主题下images文件夹下</h5><p>这种方式的问题在于本地编辑器无法识别路径，因为打包后的路径和编辑下的原始路径不一致。</p><h5 id="2-使用hexo-asset-image插件"><a href="#2-使用hexo-asset-image插件" class="headerlink" title="2.使用hexo-asset-image插件"></a>2.使用hexo-asset-image插件</h5><p>使用该插件，每次调用hexo new article时会在md文件下生成一个和文件名相同的目录，将图片放在该目录下，引用时使用相对路径应用即可。但是对于重复使用的图片会造成很大的浪费。</p><h4 id="hexo开启标签和分类"><a href="#hexo开启标签和分类" class="headerlink" title="hexo开启标签和分类"></a>hexo开启标签和分类</h4><p>在放开主题的menu相应注释后，还需要使用hexo new page tags/categories</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2018-12-18 17:08:04</span><br><span class="line">type: &quot;categories&quot;  //type不能掉了，否则无法获取数据</span><br><span class="line">---</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">```java</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">```+语言包裹代码即可</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main <span class="title">String</span><span class="params">(args[])</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"test code highlight"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ss/pp</span><br><span class="line"><span class="built_in">echo</span> ssss</span><br></pre></td></tr></table></figure><h4 id="添加github链接"><a href="#添加github链接" class="headerlink" title="添加github链接"></a>添加github链接</h4><p>参考<a href="https://juejin.im/entry/59d2da336fb9a00a5015e16b" target="_blank" rel="noopener">hexo next个性化主题</a></p><p><a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">Github ribbons example</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hexo搭建注意事项&quot;&gt;&lt;a href=&quot;#hexo搭建注意事项&quot; class=&quot;headerlink&quot; title=&quot;hexo搭建注意事项&quot;&gt;&lt;/a&gt;hexo搭建注意事项&lt;/h2&gt;&lt;p&gt; hexo的基本安装就不赘述，只谈下遇到的问题 &lt;/p&gt;

&lt;p&gt;可参考 &lt;a href=&quot;https://blog.csdn.net/sunshine940326/article/details/52552283&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo基本安装教程&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;文章需要插入本地图片&quot;&gt;&lt;a href=&quot;#文章需要插入本地图片&quot; class=&quot;headerlink&quot; title=&quot;文章需要插入本地图片&quot;&gt;&lt;/a&gt;文章需要插入本地图片&lt;/h4&gt;&lt;h5 id=&quot;1-放在主题下images文件夹下&quot;&gt;&lt;a href=&quot;#1-放在主题下images文件夹下&quot; class=&quot;headerlink&quot; title=&quot;1.放在主题下images文件夹下&quot;&gt;&lt;/a&gt;1.放在主题下images文件夹下&lt;/h5&gt;&lt;p&gt;这种方式的问题在于本地编辑器无法识别路径，因为打包后的路径和编辑下的原始路径不一致。&lt;/p&gt;
&lt;h5 id=&quot;2-使用hexo-asset-image插件&quot;&gt;&lt;a href=&quot;#2-使用hexo-asset-image插件&quot; class=&quot;headerlink&quot; title=&quot;2.使用hexo-asset-image插件&quot;&gt;&lt;/a&gt;2.使用hexo-asset-image插件&lt;/h5&gt;&lt;p&gt;使用该插件，每次调用hexo new article时会在md文件下生成一个和文件名相同的目录，将图片放在该目录下，引用时使用相对路径应用即可。但是对于重复使用的图片会造成很大的浪费。&lt;/p&gt;
&lt;h4 id=&quot;hexo开启标签和分类&quot;&gt;&lt;a href=&quot;#hexo开启标签和分类&quot; class=&quot;headerlink&quot; title=&quot;hexo开启标签和分类&quot;&gt;&lt;/a&gt;hexo开启标签和分类&lt;/h4&gt;&lt;p&gt;在放开主题的menu相应注释后，还需要使用hexo new page tags/categories&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: categories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2018-12-18 17:08:04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &amp;quot;categories&amp;quot;  //type不能掉了，否则无法获取数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="wheels" scheme="https://suzy56.github.io/categories/wheels/"/>
    
    
      <category term="hexo" scheme="https://suzy56.github.io/tags/hexo/"/>
    
      <category term="next" scheme="https://suzy56.github.io/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>markdown基本语法使用</title>
    <link href="https://suzy56.github.io/2018/12/17/hexo%20markdown%E4%BD%93%E9%AA%8C/"/>
    <id>https://suzy56.github.io/2018/12/17/hexo markdown体验/</id>
    <published>2018-12-17T09:12:37.000Z</published>
    <updated>2018-12-19T02:50:00.006Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML"></script></p><p>这是一个段落</p><strike>无效</strike><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># h1标题 #</span><br><span class="line"></span><br><span class="line">## h2标题 ##</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">###### h6标题 ######</span><br><span class="line">h1和h2的另外一种写法</span><br><span class="line">这是h1</span><br><span class="line">======</span><br><span class="line">这是h2</span><br><span class="line">------</span><br></pre></td></tr></table></figure><p>效果如下：</p><h1 id="这是h1"><a href="#这是h1" class="headerlink" title="这是h1"></a>这是h1</h1><h2 id="这是h2"><a href="#这是h2" class="headerlink" title="这是h2"></a>这是h2</h2><h3 id="h3标题"><a href="#h3标题" class="headerlink" title="h3标题"></a>h3标题</h3><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><h3 id="this-is-a-blockquote"><a href="#this-is-a-blockquote" class="headerlink" title="this is a blockquote"></a>this is a blockquote</h3></blockquote><blockquote><p>This is a long quotation. This is a long quotation. This is a long quotation. This is a long quotation. This is a long quotation.</p></blockquote><blockquote><blockquote><p>This is a long quotation. This is a long quotation. This is a long quotation. This is a long quotation. This is a long quotation.<br><a id="more"></a></p></blockquote></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* red</span><br><span class="line">* bule</span><br><span class="line">* black</span><br><span class="line"></span><br><span class="line">+ red</span><br><span class="line">+ bule</span><br><span class="line">+ black</span><br><span class="line"></span><br><span class="line">- red</span><br><span class="line">- bule</span><br><span class="line">- black</span><br></pre></td></tr></table></figure><hr><p>数字加点是输出有序列表,数字大小不会影响html输出结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. red</span><br><span class="line">2. bule</span><br><span class="line">3. black</span><br><span class="line"></span><br><span class="line">122. red</span><br><span class="line">152. bule</span><br><span class="line">1. black</span><br></pre></td></tr></table></figure></p><ol start="122"><li>red</li><li>bule</li><li>black</li></ol><hr><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line">***</span><br><span class="line">******</span><br><span class="line">- - -</span><br><span class="line">-------------------------</span><br></pre></td></tr></table></figure></p><hr><h2 id="链接和图片"><a href="#链接和图片" class="headerlink" title="链接和图片"></a>链接和图片</h2><p>两种写法都可以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[an example](url &quot;title text&quot;)</span><br><span class="line"></span><br><span class="line">&lt;a src=&quot;url&quot; title=&quot;title text&quot;&gt;an example&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">![alt text](url &quot;title text&quot;)</span><br><span class="line"></span><br><span class="line">&lt;img alt=&quot;alt text&quot; src=&quot;url&quot; title=&quot;title text&quot;&gt;</span><br></pre></td></tr></table></figure></p><p><a href="#这是h1" title="sss">哈哈</a></p><p><img src="/images/depp.jpg" alt="德普大叔"></p><h2 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h2><p>markdown支持在以下字符前面插入反斜杠</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>表格是github风格独有的语法，但近年来渐渐被大多数编辑器支持。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">: 加上 ---超过三个 对应不同的居中方式</span><br><span class="line"></span><br><span class="line">| Item     | Value | Qty   |</span><br><span class="line">| :------- | ----: | :---: |</span><br><span class="line">| Computer | $1600 |  5    |</span><br><span class="line">| Phone    | $12   |  12   |</span><br><span class="line">| Pipe     | $1    |  234  |</span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:left">Item</th><th style="text-align:right">Value</th><th style="text-align:center">Qty</th></tr></thead><tbody><tr><td style="text-align:left">Computer</td><td style="text-align:right">$1600</td><td style="text-align:center">5</td></tr><tr><td style="text-align:left">Phone</td><td style="text-align:right">$12</td><td style="text-align:center">12</td></tr><tr><td style="text-align:left">Pipe</td><td style="text-align:right">$1</td><td style="text-align:center">234</td></tr></tbody></table><h2 id="高级语法"><a href="#高级语法" class="headerlink" title="高级语法"></a>高级语法</h2><h4 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z) = \int_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\.</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>$$<br>\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p><h4 id="uml流程图"><a href="#uml流程图" class="headerlink" title="uml流程图"></a>uml流程图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br><span class="line"></span><br><span class="line">需要安装hexo插件并修改相应文件 http://wewelove.github.io/fcoder/2017/09/06/markdown-sequence/</span><br></pre></td></tr></table></figure><div id="sequence-0"></div><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">e=&gt;end</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">同样hexo需要配置插件 http://wewelove.github.io/fcoder/2017/09/06/markdown-flowchart/</span><br></pre></td></tr></table></figure><p><div id="flowchart-0" class="flow-chart"></div><script src="https://cdn.bootcss.com/raphael/2.2.7/raphael.min.js"></script><script src="https://cdn.bootcss.com/flowchart/1.7.0/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Starte=>endop=>operation: My Operationcond=>condition: Yes or No?st->op->condcond(yes)->econd(no)->op</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><script src="https://cdn.bootcss.com/webfont/1.6.28/webfontloader.js"></script><script src="https://cdn.bootcss.com/raphael/2.2.7/raphael.min.js"></script><script src="https://cdn.bootcss.com/underscore.js/1.8.3/underscore-min.js"></script><script src="https://cdn.bootcss.com/js-sequence-diagrams/1.0.6/sequence-diagram-min.js"></script><textarea id="sequence-0-code" style="display: none">Alice->Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob-->Alice: I am good thanks!</textarea><textarea id="sequence-0-options" style="display: none">{"theme":"simple"}</textarea><script>  var code = document.getElementById("sequence-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("sequence-0-options").value));  var diagram = Diagram.parse(code);  diagram.drawSVG("sequence-0", options);</script></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;这是一个段落&lt;/p&gt;



&lt;strike&gt;无效&lt;/strike&gt;

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# h1标题 #&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## h2标题 ##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###### h6标题 ######&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h1和h2的另外一种写法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这是h1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;======&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这是h2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;h1 id=&quot;这是h1&quot;&gt;&lt;a href=&quot;#这是h1&quot; class=&quot;headerlink&quot; title=&quot;这是h1&quot;&gt;&lt;/a&gt;这是h1&lt;/h1&gt;&lt;h2 id=&quot;这是h2&quot;&gt;&lt;a href=&quot;#这是h2&quot; class=&quot;headerlink&quot; title=&quot;这是h2&quot;&gt;&lt;/a&gt;这是h2&lt;/h2&gt;&lt;h3 id=&quot;h3标题&quot;&gt;&lt;a href=&quot;#h3标题&quot; class=&quot;headerlink&quot; title=&quot;h3标题&quot;&gt;&lt;/a&gt;h3标题&lt;/h3&gt;&lt;h2 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h2&gt;&lt;blockquote&gt;
&lt;h3 id=&quot;this-is-a-blockquote&quot;&gt;&lt;a href=&quot;#this-is-a-blockquote&quot; class=&quot;headerlink&quot; title=&quot;this is a blockquote&quot;&gt;&lt;/a&gt;this is a blockquote&lt;/h3&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a long quotation. This is a long quotation. This is a long quotation. This is a long quotation. This is a long quotation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a long quotation. This is a long quotation. This is a long quotation. This is a long quotation. This is a long quotation.&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://suzy56.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="hexo" scheme="https://suzy56.github.io/tags/hexo/"/>
    
      <category term="markdown" scheme="https://suzy56.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
